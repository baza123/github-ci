name: main
on:
  push:
    branches:
      - "**"
  workflow_dispatch:

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.9"
      - uses: pre-commit/action@v3.0.0

  tests:
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
        test-type: ["small", "large"]
        exclude:
          - python-version: "3.11"
            test-type: "large"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install jobsim
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          poetry install
      - name: Run tests
        run: poetry run pytest -v --junitxml=${{ matrix.test-type }}_tests_results.xml tests/${{ matrix.test-type }}
        continue-on-error: ${{ matrix.test-type == 'large' }}  # continue even if large tests fail
      - name: Upload test results
        uses: actions/upload-artifact@v2
        if: always()  # always run this step
        with:
          name: ${{ matrix.test-type }}-tests-results-${{ matrix.python-version }}
          path: ${{ matrix.test-type }}_tests_results.xml
  report_workflow:
    if: always()
    runs-on: ubuntu-latest
    needs: [pre-commit, tests]  # run after all these jobs complete
    steps:
      - uses: uoboda-splunk/workflow-info-splunk-upload-action@v1
        with:
          splunk_host: ${{ secrets.SPLUNK_HOST }}
          splunk_token: ${{ secrets.SPLUNK_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ github.token }}
  semantic-release:
    if: github.ref == 'refs/heads/main'  # run only for main branch
    needs: [pre-commit, tests, report_workflow]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: false
          persist-credentials: false
      - name: Semantic release
        id: semantic
        uses: splunk/semantic-release-action@v1.3
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN_ADMIN }}
        with:
          extra_plugins: |
            @google/semantic-release-replace-plugin
